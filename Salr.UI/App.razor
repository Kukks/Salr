@inject Db  _db
@inject ISnackbar  _snackbar
@implements IDisposable
<MudThemeProvider IsDarkMode="true"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudMainContent>
        <Router AppAssembly="@typeof(App).Assembly">
            <Found Context="routeData">
                <RouteView RouteData="@routeData"/>
            </Found>
            <NotFound>
                <PageTitle>Not found</PageTitle>
                <p role="alert">Sorry, there's nothing at this address.</p>

            </NotFound>
        </Router>
    </MudMainContent>
</MudLayout>

@code{

    protected override void OnInitialized()
    {
        _db.NoticeReceived += NoticeReceived;
        base.OnInitialized();
    }

    private void NoticeReceived(object? sender, (string tuple, Uri known) e)
    {
        _snackbar.Add($"{e.known}: {e.tuple}", Severity.Warning);
    }

    public void Dispose()
    {
        _db.NoticeReceived -= NoticeReceived;
    }

}